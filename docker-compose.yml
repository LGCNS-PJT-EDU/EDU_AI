version: '3.9'

services:
#  redis:
#    image: redis:latest
#    container_name: redis
#    ports:
#      - "6379:6379"
#    restart: always
#    networks:
#      - app-network
#
#  mysql:
#    image: mysql:8.0
#    platform: linux/amd64
#    container_name: mysql
#    ports:
#      - "3307:3306"
#    environment:
#      MYSQL_ROOT_PASSWORD: root1234
#      MYSQL_DATABASE: mydb
#      MYSQL_USER: edu
#      MYSQL_PASSWORD: edu1234
#    volumes:
#      - ./mysql/data:/var/lib/mysql
#    restart: always
#    networks:
#      - app-network
#
#  zookeeper:
#    image: confluentinc/cp-zookeeper:7.6.0
#    container_name: kzoo
#    restart: unless-stopped
#    networks:
#      - app-network
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#      ZOOKEEPER_SYNC_LIMIT: 2
#
#  kafka:
#    image: confluentinc/cp-kafka:7.6.0
#    container_name: kbroker
#    depends_on: [ zookeeper ]
#    ports:
#      - "9092:9092"
#    volumes:
#      - kafka_data:/var/lib/kafka/data
#    restart: unless-stopped
#    networks:
#      - app-network
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#      KAFKA_LOG_RETENTION_HOURS: 168
#      KAFKA_NUM_NETWORK_THREADS: 3
#      KAFKA_NUM_IO_THREADS: 8
#      KAFKA_SOCKET_REQUEST_MAX_BYTES: 104857600
#      KAFKA_HEAP_OPTS: "-Xmx512M -Xms256M"
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - app-network
    volumes:
      - ./grafana:/var/lib/grafana
    restart: always


volumes:
  kafka_data:

networks:
  app-network:
    driver: bridge
