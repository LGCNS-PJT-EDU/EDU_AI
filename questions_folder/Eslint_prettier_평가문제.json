[
  {
    "question": "ESLint의 주요 목적은 무엇인가?",
    "option1": "코드 포맷팅",
    "option2": "코드 스타일 검사 및 오류 탐지",
    "option3": "HTML 검증",
    "option4": "데이터베이스 연결",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "ESLint 기본 개념과 설치",
    "chapterNum": 1
  },
  {
    "question": "ESLint를 프로젝트에 설치할 때 사용하는 명령어는?",
    "option1": "npm install eslint",
    "option2": "npm install prettier",
    "option3": "npm install lint",
    "option4": "npm install eslint-prettier",
    "answerIndex": 1,
    "difficulty": "하",
    "chapterName": "ESLint 기본 개념과 설치",
    "chapterNum": 1
  },
  {
    "question": "ESLint 초기화 설정을 위한 명령어는?",
    "option1": "eslint init",
    "option2": "eslint setup",
    "option3": "eslint create",
    "option4": "eslint config",
    "answerIndex": 1,
    "difficulty": "하",
    "chapterName": "ESLint 기본 개념과 설치",
    "chapterNum": 1
  },
  {
    "question": "ESLint는 기본적으로 어떤 언어를 대상으로 한다?",
    "option1": "Python",
    "option2": "Java",
    "option3": "JavaScript",
    "option4": "C++",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "ESLint 기본 개념과 설치",
    "chapterNum": 1
  },
  {
    "question": "ESLint가 오류를 감지하는 기본 단위는?",
    "option1": "파일",
    "option2": "프로젝트",
    "option3": "라인",
    "option4": "토큰",
    "answerIndex": 1,
    "difficulty": "중",
    "chapterName": "ESLint 기본 개념과 설치",
    "chapterNum": 1
  },
  {
    "question": "ESLint 설정 파일 확장자가 아닌 것은?",
    "option1": ".eslintrc.js",
    "option2": ".eslintrc.json",
    "option3": ".eslintrc.yaml",
    "option4": ".eslintconf",
    "answerIndex": 4,
    "difficulty": "중",
    "chapterName": "ESLint 기본 개념과 설치",
    "chapterNum": 1
  },
  {
    "question": "ESLint에서 규칙을 끄는 방법은?",
    "option1": "rules: { '규칙명': 'off' }",
    "option2": "rules: { '규칙명': 'on' }",
    "option3": "disableRule()",
    "option4": "eslintOff",
    "answerIndex": 1,
    "difficulty": "중",
    "chapterName": "ESLint 기본 개념과 설치",
    "chapterNum": 1
  },
  {
    "question": "ESLint를 CLI로 실행할 때 사용하는 기본 명령어는?",
    "option1": "eslint run",
    "option2": "eslint check",
    "option3": "eslint <파일경로>",
    "option4": "eslint execute",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "ESLint 기본 개념과 설치",
    "chapterNum": 1
  },
  {
    "question": "ESLint 설정을 공유할 수 있도록 제공되는 것은?",
    "option1": "플러그인",
    "option2": "공유 설정 패키지",
    "option3": "Preset",
    "option4": "All of the above",
    "answerIndex": 4,
    "difficulty": "상",
    "chapterName": "ESLint 기본 개념과 설치",
    "chapterNum": 1
  },
  {
    "question": "ESLint를 설치할 때 전역 설치를 위한 명령어는?",
    "option1": "npm install -g eslint",
    "option2": "npm add eslint",
    "option3": "npm set eslint",
    "option4": "npm run eslint",
    "answerIndex": 1,
    "difficulty": "상",
    "chapterName": "ESLint 기본 개념과 설치",
    "chapterNum": 1
  },
  {
    "question": "ESLint 설정 파일에서 규칙을 설정하는 속성은?",
    "option1": "rules",
    "option2": "plugins",
    "option3": "env",
    "option4": "settings",
    "answerIndex": 1,
    "difficulty": "하",
    "chapterName": "ESLint 규칙과 설정 파일",
    "chapterNum": 2
  },
  {
    "question": "ESLint 규칙 중 코드 스타일 관련 규칙을 설정하는 대표적인 항목은?",
    "option1": "no-console",
    "option2": "semi",
    "option3": "no-undef",
    "option4": "no-unused-vars",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "ESLint 규칙과 설정 파일",
    "chapterNum": 2
  },
  {
    "question": "ESLint 설정 파일에서 환경(environment)을 설정하는 속성은?",
    "option1": "env",
    "option2": "settings",
    "option3": "globals",
    "option4": "plugins",
    "answerIndex": 1,
    "difficulty": "하",
    "chapterName": "ESLint 규칙과 설정 파일",
    "chapterNum": 2
  },
  {
    "question": "Node.js 환경을 설정할 때 사용하는 ESLint env 옵션은?",
    "option1": "browser: true",
    "option2": "node: true",
    "option3": "es2021: true",
    "option4": "commonjs: true",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "ESLint 규칙과 설정 파일",
    "chapterNum": 2
  },
  {
    "question": "ESLint 설정 파일에서 전역 변수(global variables)를 선언하는 속성은?",
    "option1": "globals",
    "option2": "global",
    "option3": "vars",
    "option4": "expose",
    "answerIndex": 1,
    "difficulty": "중",
    "chapterName": "ESLint 규칙과 설정 파일",
    "chapterNum": 2
  },
  {
    "question": "ESLint 플러그인은 주로 무엇을 확장하기 위해 사용하는가?",
    "option1": "코드 스타일",
    "option2": "문법 검사 범위",
    "option3": "빌드 속도",
    "option4": "버전 관리",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "ESLint 규칙과 설정 파일",
    "chapterNum": 2
  },
  {
    "question": "eslint:recommended 설정은 어떤 역할을 하는가?",
    "option1": "모든 규칙을 끈다",
    "option2": "자주 발생하는 오류를 막는 기본 규칙을 적용한다",
    "option3": "코드 스타일을 통일한다",
    "option4": "Prettier를 활성화한다",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "ESLint 규칙과 설정 파일",
    "chapterNum": 2
  },
  {
    "question": "ESLint 규칙에서 'off', 'warn', 'error'는 각각 무엇을 의미하는가?",
    "option1": "설정 끄기/경고/에러로 처리",
    "option2": "설정 켜기/무시/로그 출력",
    "option3": "강제 적용/권장/제외",
    "option4": "스킵/로그/실패",
    "answerIndex": 1,
    "difficulty": "상",
    "chapterName": "ESLint 규칙과 설정 파일",
    "chapterNum": 2
  },
  {
    "question": "ESLint 설정 파일이 가장 먼저 찾는 파일 이름은?",
    "option1": ".eslintconfig.js",
    "option2": ".eslintrc.js",
    "option3": "eslint.config.json",
    "option4": "config.eslint",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "ESLint 규칙과 설정 파일",
    "chapterNum": 2
  },
  {
    "question": "ESLint에서 특정 파일이나 폴더를 무시할 때 사용하는 파일은?",
    "option1": ".gitignore",
    "option2": ".eslintignore",
    "option3": ".eslintconfig",
    "option4": "ignored.eslint",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "ESLint 규칙과 설정 파일",
    "chapterNum": 2
  },
  {
    "question": "Prettier의 주요 기능은 무엇인가?",
    "option1": "코드 스타일 검사",
    "option2": "코드 포맷팅 자동화",
    "option3": "오류 탐지",
    "option4": "파일 경로 관리",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "Prettier 기본 개념과 포맷팅",
    "chapterNum": 3
  },
  {
    "question": "Prettier를 설치하는 명령어는?",
    "option1": "npm install prettier",
    "option2": "npm install eslint",
    "option3": "npm install format",
    "option4": "npm install prettier-eslint",
    "answerIndex": 1,
    "difficulty": "하",
    "chapterName": "Prettier 기본 개념과 포맷팅",
    "chapterNum": 3
  },
  {
    "question": "Prettier로 코드를 포맷팅하는 기본 CLI 명령어는?",
    "option1": "prettier format",
    "option2": "prettier lint",
    "option3": "prettier --write",
    "option4": "prettier fix",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "Prettier 기본 개념과 포맷팅",
    "chapterNum": 3
  },
  {
    "question": "Prettier는 기본적으로 어떤 오류를 다루는가?",
    "option1": "Syntax Error",
    "option2": "Runtime Error",
    "option3": "Style Error",
    "option4": "Type Error",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "Prettier 기본 개념과 포맷팅",
    "chapterNum": 3
  },
  {
    "question": "Prettier 설정 파일 확장자가 아닌 것은?",
    "option1": ".prettierrc",
    "option2": ".prettierrc.js",
    "option3": ".prettierrc.json",
    "option4": ".prettierconfig",
    "answerIndex": 4,
    "difficulty": "중",
    "chapterName": "Prettier 기본 개념과 포맷팅",
    "chapterNum": 3
  },
  {
    "question": "Prettier 설정에서 줄 길이 최대치를 지정하는 옵션은?",
    "option1": "printWidth",
    "option2": "tabWidth",
    "option3": "lineLength",
    "option4": "wrapLine",
    "answerIndex": 1,
    "difficulty": "중",
    "chapterName": "Prettier 기본 개념과 포맷팅",
    "chapterNum": 3
  },
  {
    "question": "Prettier 설정에서 들여쓰기 크기를 지정하는 옵션은?",
    "option1": "indent",
    "option2": "tabWidth",
    "option3": "spaceSize",
    "option4": "tabSize",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "Prettier 기본 개념과 포맷팅",
    "chapterNum": 3
  },
  {
    "question": "Prettier에서 세미콜론 사용 여부를 설정하는 옵션은?",
    "option1": "semi",
    "option2": "semicolon",
    "option3": "endSemicolon",
    "option4": "useSemi",
    "answerIndex": 1,
    "difficulty": "상",
    "chapterName": "Prettier 기본 개념과 포맷팅",
    "chapterNum": 3
  },
  {
    "question": "Prettier 설정에서 따옴표를 싱글로 사용할지 설정하는 옵션은?",
    "option1": "singleQuote",
    "option2": "useSingleQuote",
    "option3": "quoteType",
    "option4": "preferSingle",
    "answerIndex": 1,
    "difficulty": "상",
    "chapterName": "Prettier 기본 개념과 포맷팅",
    "chapterNum": 3
  },
  {
    "question": "Prettier를 VSCode에 통합할 때 필요한 확장 프로그램은?",
    "option1": "Prettier - Code formatter",
    "option2": "ESLint Formatter",
    "option3": "Code Beautifier",
    "option4": "Auto Linter",
    "answerIndex": 1,
    "difficulty": "상",
    "chapterName": "Prettier 기본 개념과 포맷팅",
    "chapterNum": 3
  },
  {
    "question": "ESLint와 Prettier를 함께 사용할 때 충돌을 방지하기 위한 패키지는?",
    "option1": "eslint-plugin-prettier",
    "option2": "eslint-config-prettier",
    "option3": "prettier-eslint-config",
    "option4": "eslint-prettier-sync",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "ESLint와 Prettier 통합 설정",
    "chapterNum": 4
  },
  {
    "question": "eslint-plugin-prettier의 역할은?",
    "option1": "Prettier를 Lint 규칙처럼 동작시킴",
    "option2": "Prettier 포맷만 적용",
    "option3": "Lint 설정 제거",
    "option4": "Prettier 비활성화",
    "answerIndex": 1,
    "difficulty": "하",
    "chapterName": "ESLint와 Prettier 통합 설정",
    "chapterNum": 4
  },
  {
    "question": "Prettier 설정이 ESLint 설정보다 우선되도록 하려면?",
    "option1": "prettier-last",
    "option2": "eslint-prettier-last",
    "option3": "prettier를 extends 마지막에 설정",
    "option4": "eslint-plugin-prettier 우선 적용",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "ESLint와 Prettier 통합 설정",
    "chapterNum": 4
  },
  {
    "question": "Prettier와 ESLint를 동시에 적용하기 위한 설정 파일은?",
    "option1": ".eslintprettier.json",
    "option2": ".eslintrc",
    "option3": ".prettierrc",
    "option4": ".eslintconfig",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "ESLint와 Prettier 통합 설정",
    "chapterNum": 4
  },
  {
    "question": "eslint-config-prettier를 사용하면 무엇이 비활성화되는가?",
    "option1": "모든 Lint 규칙",
    "option2": "Prettier와 충돌하는 Lint 규칙",
    "option3": "모든 스타일 규칙",
    "option4": "커밋 훅",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "ESLint와 Prettier 통합 설정",
    "chapterNum": 4
  },
  {
    "question": "VSCode에서 ESLint와 Prettier를 동시에 적용하려면 필요한 확장은?",
    "option1": "Prettier only",
    "option2": "ESLint only",
    "option3": "둘 다 설치",
    "option4": "AutoLint",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "ESLint와 Prettier 통합 설정",
    "chapterNum": 4
  },
  {
    "question": "ESLint와 Prettier를 통합한 후, 코드 포맷팅 자동화를 위해 설정할 수 있는 VSCode 기능은?",
    "option1": "onSaveFormat",
    "option2": "formatOnSave",
    "option3": "saveFormatter",
    "option4": "autoSaveLint",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "ESLint와 Prettier 통합 설정",
    "chapterNum": 4
  },
  {
    "question": "Prettier 설정을 eslint-plugin-prettier에 연결하려면 필요한 설정 속성은?",
    "option1": "rules.prettier/prettier",
    "option2": "extends prettier",
    "option3": "settings.prettier",
    "option4": "plugin:prettier/setting",
    "answerIndex": 1,
    "difficulty": "상",
    "chapterName": "ESLint와 Prettier 통합 설정",
    "chapterNum": 4
  },
  {
    "question": "Prettier 규칙 위반을 ESLint 에러로 처리하는 것은?",
    "option1": "eslint-config-prettier",
    "option2": "eslint-plugin-prettier",
    "option3": "prettier-eslint",
    "option4": "prettier-only",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "ESLint와 Prettier 통합 설정",
    "chapterNum": 4
  },
  {
    "question": "Prettier를 적용한 파일만 선택적으로 포맷팅하려면 사용할 수 있는 커맨드는?",
    "option1": "prettier --write 'src/**/*.{js,ts}'",
    "option2": "eslint --fix",
    "option3": "prettier --lint",
    "option4": "prettier --check-only",
    "answerIndex": 1,
    "difficulty": "상",
    "chapterName": "ESLint와 Prettier 통합 설정",
    "chapterNum": 4
  },
  {
    "question": "ESLint에서 사용자 정의 규칙을 만들려면 필요한 요소는?",
    "option1": "parser",
    "option2": "plugin",
    "option3": "rule",
    "option4": "formatter",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "실제 적용 및 커스텀 규칙 작성",
    "chapterNum": 5
  },
  {
    "question": "Prettier 설정 파일을 프로젝트 루트에 두는 이유는?",
    "option1": "CI/CD 설정을 위해",
    "option2": "포맷팅 기준을 통일하기 위해",
    "option3": "코드 압축을 위해",
    "option4": "로그 저장을 위해",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "실제 적용 및 커스텀 규칙 작성",
    "chapterNum": 5
  },
  {
    "question": "ESLint 플러그인을 직접 개발할 때 필요한 핵심 구성 요소는?",
    "option1": "rules",
    "option2": "presets",
    "option3": "config.js",
    "option4": "validators",
    "answerIndex": 1,
    "difficulty": "하",
    "chapterName": "실제 적용 및 커스텀 규칙 작성",
    "chapterNum": 5
  },
  {
    "question": "커스텀 규칙을 ESLint 설정 파일에 추가할 때 필요한 속성은?",
    "option1": "customRules",
    "option2": "rules",
    "option3": "plugins",
    "option4": "overrides",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "실제 적용 및 커스텀 규칙 작성",
    "chapterNum": 5
  },
  {
    "question": "Prettier에서 프로젝트마다 다른 스타일을 적용하려면 사용하는 파일은?",
    "option1": ".prettierignore",
    "option2": "prettier.config.js",
    "option3": ".prettierrules",
    "option4": ".prettiersettings",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "실제 적용 및 커스텀 규칙 작성",
    "chapterNum": 5
  },
  {
    "question": "ESLint 커스텀 플러그인 개발 시 필수적으로 포함되어야 하는 파일은?",
    "option1": "rules/index.js",
    "option2": "lib/rules.js",
    "option3": "src/config.js",
    "option4": "plugin.config.js",
    "answerIndex": 1,
    "difficulty": "중",
    "chapterName": "실제 적용 및 커스텀 규칙 작성",
    "chapterNum": 5
  },
  {
    "question": "VSCode에서 저장 시 자동으로 Prettier 포맷팅을 적용하려면 설정해야 하는 옵션은?",
    "option1": "editor.autoFormatOnSave",
    "option2": "editor.formatOnSave",
    "option3": "editor.saveFormat",
    "option4": "editor.prettify",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "실제 적용 및 커스텀 규칙 작성",
    "chapterNum": 5
  },
  {
    "question": "Prettier 설정을 무시하고 특정 파일만 포맷팅 제외하려면 사용하는 파일은?",
    "option1": ".prettierignore",
    "option2": ".eslintignore",
    "option3": ".formatignore",
    "option4": ".ignoreprettier",
    "answerIndex": 1,
    "difficulty": "상",
    "chapterName": "실제 적용 및 커스텀 규칙 작성",
    "chapterNum": 5
  },
  {
    "question": "ESLint에서 특정 디렉토리만 별도 규칙으로 적용하려면 사용하는 설정 항목은?",
    "option1": "overrides",
    "option2": "env",
    "option3": "globals",
    "option4": "parserOptions",
    "answerIndex": 1,
    "difficulty": "상",
    "chapterName": "실제 적용 및 커스텀 규칙 작성",
    "chapterNum": 5
  },
  {
    "question": "Prettier 커스텀 설정을 여러 프로젝트에서 재사용하려면 사용하는 방법은?",
    "option1": "공유 설정 패키지로 배포",
    "option2": "로컬에 복사",
    "option3": "VSCode 설정만 변경",
    "option4": "package.json에 직접 작성",
    "answerIndex": 1,
    "difficulty": "상",
    "chapterName": "실제 적용 및 커스텀 규칙 작성",
    "chapterNum": 5
  }
]