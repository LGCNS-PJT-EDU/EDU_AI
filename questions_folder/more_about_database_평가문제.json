[
  {
    "question": "관계형 데이터베이스(RDB)에서 데이터를 구조화하는 기본 단위는 무엇인가?",
    "option1": "컬렉션",
    "option2": "도큐먼트",
    "option3": "테이블",
    "option4": "키-값 쌍",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "RDB 기초 개념",
    "chapterNum": 1
  },
  {
    "question": "SQL에서 데이터를 조회할 때 사용하는 기본 명령어는?",
    "option1": "PULL",
    "option2": "FIND",
    "option3": "GET",
    "option4": "SELECT",
    "answerIndex": 4,
    "difficulty": "하",
    "chapterName": "RDB 기초 개념",
    "chapterNum": 1
  },
  {
    "question": "RDB에서 각 행을 유일하게 식별하기 위해 사용하는 키는?",
    "option1": "Foreign Key",
    "option2": "Index",
    "option3": "Primary Key",
    "option4": "Row ID",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "RDB 기초 개념",
    "chapterNum": 1
  },
  {
    "question": "정규화의 목적은 무엇인가?",
    "option1": "데이터를 중복 저장하여 성능 향상",
    "option2": "테이블을 무작위로 분리",
    "option3": "데이터 중복을 줄이고 무결성을 유지",
    "option4": "SQL 쿼리를 단순화",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "RDB 기초 개념",
    "chapterNum": 1
  },
  {
    "question": "다음 중 외래 키(Foreign Key)에 대한 설명으로 올바른 것은?",
    "option1": "중복된 값을 허용하지 않는다",
    "option2": "다른 테이블의 기본 키를 참조한다",
    "option3": "같은 테이블 내에서만 사용된다",
    "option4": "데이터를 암호화한다",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "RDB 기초 개념",
    "chapterNum": 1
  },
  {
    "question": "ACID 속성 중 '일관성(Consistency)'은 어떤 의미인가?",
    "option1": "모든 트랜잭션은 동시에 실행되어야 한다",
    "option2": "모든 데이터는 암호화되어야 한다",
    "option3": "트랜잭션 수행 전후에 데이터의 무결성이 보장된다",
    "option4": "항상 최신 데이터를 반환한다",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "RDB 기초 개념",
    "chapterNum": 1
  },
  {
    "question": "RDBMS에서 트랜잭션이 실패했을 때 이전 상태로 되돌리는 작업은?",
    "option1": "COMMIT",
    "option2": "ROLLBACK",
    "option3": "SELECT",
    "option4": "RESTORE",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "RDB 기초 개념",
    "chapterNum": 1
  },
  {
    "question": "인덱스(Index)를 생성하는 주된 목적은?",
    "option1": "데이터를 암호화하기 위해",
    "option2": "데이터를 자동으로 백업하기 위해",
    "option3": "데이터 접근 속도를 향상시키기 위해",
    "option4": "데이터 정렬 순서를 바꾸기 위해",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "RDB 기초 개념",
    "chapterNum": 1
  },
  {
    "question": "RDB의 트랜잭션 처리에서 '격리성(Isolation)'이 낮으면 발생할 수 있는 현상은?",
    "option1": "데이터 누락",
    "option2": "동시성 문제",
    "option3": "성능 저하",
    "option4": "무결성 위반",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "RDB 기초 개념",
    "chapterNum": 1
  },
  {
    "question": "관계형 데이터베이스에서 정규화 1NF는 무엇을 의미하는가?",
    "option1": "모든 데이터가 원자값으로 구성되어야 함",
    "option2": "중복 데이터 허용",
    "option3": "각 테이블은 하나의 기본 키만 가져야 함",
    "option4": "테이블 간 연결을 금지함",
    "answerIndex": 1,
    "difficulty": "상",
    "chapterName": "RDB 기초 개념",
    "chapterNum": 1
  },
  {
    "question": "MySQL의 대표적인 장점은 무엇인가?",
    "option1": "그래프 데이터 처리",
    "option2": "오픈소스 기반",
    "option3": "객체지향 설계",
    "option4": "NoSQL 호환성",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "RDB 종류와 특징",
    "chapterNum": 2
  },
  {
    "question": "PostgreSQL의 특징으로 옳은 것은?",
    "option1": "ACID 지원 미비",
    "option2": "JSON 미지원",
    "option3": "확장성 강점",
    "option4": "비정형 데이터에 특화됨",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "RDB 종류와 특징",
    "chapterNum": 2
  },
  {
    "question": "SQLite는 어떤 상황에 적합한가?",
    "option1": "대규모 트랜잭션 처리",
    "option2": "모바일 로컬 저장소",
    "option3": "분산 클러스터 구성",
    "option4": "NoSQL 연동",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "RDB 종류와 특징",
    "chapterNum": 2
  },
  {
    "question": "Oracle DB는 주로 어떤 기업 환경에서 사용되는가?",
    "option1": "스타트업",
    "option2": "대기업 및 금융",
    "option3": "교육 기관",
    "option4": "오픈소스 커뮤니티",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "RDB 종류와 특징",
    "chapterNum": 2
  },
  {
    "question": "MariaDB는 어떤 데이터베이스에서 파생되었는가?",
    "option1": "Oracle",
    "option2": "MongoDB",
    "option3": "MySQL",
    "option4": "PostgreSQL",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "RDB 종류와 특징",
    "chapterNum": 2
  },
  {
    "question": "RDB 중 '서브쿼리와 복잡한 조인'에 강점을 가진 것은?",
    "option1": "MySQL",
    "option2": "MongoDB",
    "option3": "PostgreSQL",
    "option4": "Redis",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "RDB 종류와 특징",
    "chapterNum": 2
  },
  {
    "question": "다음 중 오픈소스가 아닌 상용 RDB는?",
    "option1": "MySQL",
    "option2": "Oracle",
    "option3": "PostgreSQL",
    "option4": "MariaDB",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "RDB 종류와 특징",
    "chapterNum": 2
  },
  {
    "question": "PostgreSQL의 MVCC는 어떤 문제를 해결하기 위한 기술인가?",
    "option1": "데이터 정렬",
    "option2": "보안성 강화",
    "option3": "동시성 제어",
    "option4": "문자 인코딩",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "RDB 종류와 특징",
    "chapterNum": 2
  },
  {
    "question": "MySQL의 InnoDB 엔진의 특징은?",
    "option1": "트랜잭션 미지원",
    "option2": "풀텍스트 검색 특화",
    "option3": "ACID 지원",
    "option4": "클러스터 미지원",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "RDB 종류와 특징",
    "chapterNum": 2
  },
  {
    "question": "SQL 표준 준수율이 가장 높은 DB는?",
    "option1": "MySQL",
    "option2": "PostgreSQL",
    "option3": "SQLite",
    "option4": "Redis",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "RDB 종류와 특징",
    "chapterNum": 2
  },
  {
    "question": "NoSQL의 주요 특징 중 하나는?",
    "option1": "스키마 엄격함",
    "option2": "관계형 조인 강화",
    "option3": "유연한 구조",
    "option4": "SQL 강제 사용",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "NoSQL 개요 및 분류",
    "chapterNum": 3
  },
  {
    "question": "NoSQL이 처음 주목받게 된 이유는?",
    "option1": "모바일 호환성",
    "option2": "고성능 게임 서버",
    "option3": "웹 확장성과 대용량 처리",
    "option4": "스키마 고정성",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "NoSQL 개요 및 분류",
    "chapterNum": 3
  },
  {
    "question": "NoSQL의 4가지 대표 유형에 속하지 않는 것은?",
    "option1": "키-값 저장소",
    "option2": "문서 지향",
    "option3": "객체 지향",
    "option4": "열 지향",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "NoSQL 개요 및 분류",
    "chapterNum": 3
  },
  {
    "question": "문서 지향 DB의 대표적인 예는?",
    "option1": "Redis",
    "option2": "MongoDB",
    "option3": "Cassandra",
    "option4": "MySQL",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "NoSQL 개요 및 분류",
    "chapterNum": 3
  },
  {
    "question": "Column 기반 NoSQL DB는?",
    "option1": "DynamoDB",
    "option2": "Redis",
    "option3": "Cassandra",
    "option4": "MongoDB",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "NoSQL 개요 및 분류",
    "chapterNum": 3
  },
  {
    "question": "그래프 기반 NoSQL의 예시는?",
    "option1": "Neo4j",
    "option2": "MongoDB",
    "option3": "MySQL",
    "option4": "Elasticsearch",
    "answerIndex": 1,
    "difficulty": "중",
    "chapterName": "NoSQL 개요 및 분류",
    "chapterNum": 3
  },
  {
    "question": "BASE 속성 중 A는 무엇을 의미하는가?",
    "option1": "Access",
    "option2": "Available",
    "option3": "Atom",
    "option4": "Array",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "NoSQL 개요 및 분류",
    "chapterNum": 3
  },
  {
    "question": "NoSQL에서 스키마리스란?",
    "option1": "데이터 무결성 강화",
    "option2": "정해진 테이블 구조 사용",
    "option3": "구조 없이 저장 가능",
    "option4": "SQL 의무 사용",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "NoSQL 개요 및 분류",
    "chapterNum": 3
  },
  {
    "question": "NoSQL이 관계형 DB에 비해 약한 점은?",
    "option1": "확장성",
    "option2": "조인 기능",
    "option3": "처리 속도",
    "option4": "보안 기능",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "NoSQL 개요 및 분류",
    "chapterNum": 3
  },
  {
    "question": "CAP 이론의 세 요소 중 일치하지 않는 것은?",
    "option1": "Consistency",
    "option2": "Availability",
    "option3": "Partition Tolerance",
    "option4": "Atomicity",
    "answerIndex": 4,
    "difficulty": "상",
    "chapterName": "NoSQL 개요 및 분류",
    "chapterNum": 3
  },
  {
    "question": "MongoDB에서 데이터를 저장하는 단위는?",
    "option1": "Row",
    "option2": "Document",
    "option3": "Tuple",
    "option4": "Entity",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "NoSQL 대표 사례",
    "chapterNum": 4
  },
  {
    "question": "Redis는 어떤 방식으로 데이터를 저장하는가?",
    "option1": "문서 지향",
    "option2": "키-값",
    "option3": "열 기반",
    "option4": "트리 기반",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "NoSQL 대표 사례",
    "chapterNum": 4
  },
  {
    "question": "Firebase는 어떤 용도로 자주 사용되는가?",
    "option1": "정적 페이지",
    "option2": "서버리스 백엔드",
    "option3": "BI 분석",
    "option4": "대용량 로그 분석",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "NoSQL 대표 사례",
    "chapterNum": 4
  },
  {
    "question": "Elasticsearch는 어떤 특성의 DB인가?",
    "option1": "키-값 저장소",
    "option2": "문서 기반 검색 엔진",
    "option3": "그래프 DB",
    "option4": "SQL DB",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "NoSQL 대표 사례",
    "chapterNum": 4
  },
  {
    "question": "Cassandra는 어떤 구조 기반인가?",
    "option1": "키-값",
    "option2": "문서",
    "option3": "열 기반",
    "option4": "파일 기반",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "NoSQL 대표 사례",
    "chapterNum": 4
  },
  {
    "question": "Redis는 어떤 데이터 구조를 지원하지 않는가?",
    "option1": "리스트",
    "option2": "셋",
    "option3": "그래프",
    "option4": "해시",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "NoSQL 대표 사례",
    "chapterNum": 4
  },
  {
    "question": "MongoDB의 데이터 저장 구조는 무엇을 따르는가?",
    "option1": "RDF 트리",
    "option2": "BSON",
    "option3": "CSV",
    "option4": "YAML",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "NoSQL 대표 사례",
    "chapterNum": 4
  },
  {
    "question": "Redis는 어떤 특성을 가지고 있는가?",
    "option1": "디스크 기반",
    "option2": "비동기 처리 미지원",
    "option3": "인메모리 저장소",
    "option4": "BLOB 저장 특화",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "NoSQL 대표 사례",
    "chapterNum": 4
  },
  {
    "question": "Cassandra는 어떤 일관성 모델을 따르는가?",
    "option1": "강한 일관성",
    "option2": "약한 일관성",
    "option3": "혼합 일관성",
    "option4": "일관성 없음",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "NoSQL 대표 사례",
    "chapterNum": 4
  },
  {
    "question": "다음 중 Elasticsearch의 주된 사용 목적은?",
    "option1": "트랜잭션 처리",
    "option2": "검색 최적화",
    "option3": "트리거 이벤트 처리",
    "option4": "세션 저장소",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "NoSQL 대표 사례",
    "chapterNum": 4
  },
  {
    "question": "로그 데이터 저장에 가장 적합한 DB 유형은?",
    "option1": "관계형 DB",
    "option2": "문서 지향 DB",
    "option3": "열 기반 DB",
    "option4": "그래프 DB",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "상황에 맞는 DB 선택 전략",
    "chapterNum": 5
  },
  {
    "question": "사용자 인증과 같은 정형 데이터를 저장할 DB는?",
    "option1": "MongoDB",
    "option2": "Redis",
    "option3": "MySQL",
    "option4": "Cassandra",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "상황에 맞는 DB 선택 전략",
    "chapterNum": 5
  },
  {
    "question": "소셜 그래프 구조를 저장할 때 적합한 DB는?",
    "option1": "Neo4j",
    "option2": "PostgreSQL",
    "option3": "DynamoDB",
    "option4": "Elasticsearch",
    "answerIndex": 1,
    "difficulty": "하",
    "chapterName": "상황에 맞는 DB 선택 전략",
    "chapterNum": 5
  },
  {
    "question": "단기 캐시 데이터 저장용으로 적합한 DB는?",
    "option1": "Redis",
    "option2": "MySQL",
    "option3": "MongoDB",
    "option4": "SQLite",
    "answerIndex": 1,
    "difficulty": "중",
    "chapterName": "상황에 맞는 DB 선택 전략",
    "chapterNum": 5
  },
  {
    "question": "모바일 앱에서 로컬 데이터 저장용으로 적합한 DB는?",
    "option1": "Oracle",
    "option2": "MongoDB",
    "option3": "SQLite",
    "option4": "Cassandra",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "상황에 맞는 DB 선택 전략",
    "chapterNum": 5
  },
  {
    "question": "다양한 포맷의 비정형 데이터를 저장하기 좋은 DB는?",
    "option1": "MySQL",
    "option2": "MongoDB",
    "option3": "PostgreSQL",
    "option4": "Redis",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "상황에 맞는 DB 선택 전략",
    "chapterNum": 5
  },
  {
    "question": "실시간 분석과 빠른 쓰기가 필요한 경우 적합한 DB는?",
    "option1": "Elasticsearch",
    "option2": "Redis",
    "option3": "Oracle",
    "option4": "Neo4j",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "상황에 맞는 DB 선택 전략",
    "chapterNum": 5
  },
  {
    "question": "데이터 간의 관계가 복잡하게 연결된 경우 적합한 DB는?",
    "option1": "MySQL",
    "option2": "Neo4j",
    "option3": "Elasticsearch",
    "option4": "DynamoDB",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "상황에 맞는 DB 선택 전략",
    "chapterNum": 5
  },
  {
    "question": "확장성과 장애 허용성이 중요한 경우 선택할 DB는?",
    "option1": "Redis",
    "option2": "PostgreSQL",
    "option3": "Cassandra",
    "option4": "SQLite",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "상황에 맞는 DB 선택 전략",
    "chapterNum": 5
  },
  {
    "question": "대규모 사용자 기반의 채팅 앱에서 상태 저장에 적합한 DB는?",
    "option1": "Redis",
    "option2": "MySQL",
    "option3": "Neo4j",
    "option4": "Elasticsearch",
    "answerIndex": 1,
    "difficulty": "상",
    "chapterName": "상황에 맞는 DB 선택 전략",
    "chapterNum": 5
  }
]