[
  {
    "question": "Python에서 변수 이름으로 사용할 수 없는 것은?",
    "option1": "_value",
    "option2": "value1",
    "option3": "1value",
    "option4": "value_1",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "기초 문법과 자료형",
    "chapterNum": 1
  },
  {
    "question": "다음 중 Python에서 문자열을 나타내는 것은?",
    "option1": "'Hello'",
    "option2": "\"World\"",
    "option3": "str('Test')",
    "option4": "All of the above",
    "answerIndex": 4,
    "difficulty": "하",
    "chapterName": "기초 문법과 자료형",
    "chapterNum": 1
  },
  {
    "question": "다음 중 숫자형에 해당하지 않는 것은?",
    "option1": "int",
    "option2": "float",
    "option3": "str",
    "option4": "complex",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "기초 문법과 자료형",
    "chapterNum": 1
  },
  {
    "question": "float 자료형의 기본 특징으로 올바른 것은?",
    "option1": "정수만 저장",
    "option2": "소수점 표현 가능",
    "option3": "문자 저장 가능",
    "option4": "참/거짓만 저장",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "기초 문법과 자료형",
    "chapterNum": 1
  },
  {
    "question": "불리언(Boolean) 타입의 기본값이 아닌 것은?",
    "option1": "True",
    "option2": "False",
    "option3": "None",
    "option4": "0 == 1",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "기초 문법과 자료형",
    "chapterNum": 1
  },
  {
    "question": "다음 중 type(5.0)의 반환 값은?",
    "option1": "<class 'int'>",
    "option2": "<class 'float'>",
    "option3": "<type 'double'>",
    "option4": "<class 'complex'>",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "기초 문법과 자료형",
    "chapterNum": 1
  },
  {
    "question": "문자열 여러 줄을 표현할 수 있는 구문은?",
    "option1": "'''문자열'''",
    "option2": "\"\"\"문자열\"\"\"",
    "option3": "모두 해당",
    "option4": "'문자열'",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "기초 문법과 자료형",
    "chapterNum": 1
  },
  {
    "question": "Python에서 자료형 확인 시 사용하는 함수는?",
    "option1": "typeof()",
    "option2": "type()",
    "option3": "data()",
    "option4": "kind()",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "기초 문법과 자료형",
    "chapterNum": 1
  },
  {
    "question": "다음 중 유효한 정수 리터럴 표기는?",
    "option1": "0123",
    "option2": "0b1010",
    "option3": "0x1G",
    "option4": "10.0",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "기초 문법과 자료형",
    "chapterNum": 1
  },
  {
    "question": "다음 중 Python에서 기본 제공되는 자료형은?",
    "option1": "bool",
    "option2": "int",
    "option3": "float",
    "option4": "모두 해당",
    "answerIndex": 4,
    "difficulty": "상",
    "chapterName": "기초 문법과 자료형",
    "chapterNum": 1
  },
  {
    "question": "Python에서 if 조건문을 끝내는 구문은?",
    "option1": "endif",
    "option2": "fi",
    "option3": "콜론(:)",
    "option4": "done",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "조건문과 반복문",
    "chapterNum": 2
  },
  {
    "question": "Python에서 반복을 위해 사용되는 키워드는?",
    "option1": "repeat",
    "option2": "loop",
    "option3": "for",
    "option4": "next",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "조건문과 반복문",
    "chapterNum": 2
  },
  {
    "question": "다음 중 조건문으로 올바른 것은?",
    "option1": "if x > 0 then",
    "option2": "if (x > 0)",
    "option3": "if x > 0:",
    "option4": "x > 0 if",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "조건문과 반복문",
    "chapterNum": 2
  },
  {
    "question": "while 문에서 조건이 False이면?",
    "option1": "무한 반복된다",
    "option2": "한 번은 실행된다",
    "option3": "실행되지 않는다",
    "option4": "오류 발생",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "조건문과 반복문",
    "chapterNum": 2
  },
  {
    "question": "range(3)의 결과는?",
    "option1": "[1, 2, 3]",
    "option2": "[0, 1, 2]",
    "option3": "[0, 1, 2, 3]",
    "option4": "[3]",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "조건문과 반복문",
    "chapterNum": 2
  },
  {
    "question": "continue 문을 사용할 경우 어떻게 되는가?",
    "option1": "루프가 종료됨",
    "option2": "루프가 중단됨",
    "option3": "현재 반복만 건너뜀",
    "option4": "에러 발생",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "조건문과 반복문",
    "chapterNum": 2
  },
  {
    "question": "for 문에서 변수명을 정의할 수 없는 경우는?",
    "option1": "for x in range(5):",
    "option2": "for 1x in range(5):",
    "option3": "for _ in range(5):",
    "option4": "for item in items:",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "조건문과 반복문",
    "chapterNum": 2
  },
  {
    "question": "다음 중 중첩 조건문을 작성한 코드로 올바른 것은?",
    "option1": "if x > 1:\n  if y > 1:",
    "option2": "if x > 1: if y > 1",
    "option3": "if (x > 1) then if (y > 1)",
    "option4": "if x > 1, if y > 1:",
    "answerIndex": 1,
    "difficulty": "상",
    "chapterName": "조건문과 반복문",
    "chapterNum": 2
  },
  {
    "question": "break 문은 어떤 상황에서 사용되는가?",
    "option1": "변수를 종료할 때",
    "option2": "조건을 변경할 때",
    "option3": "루프를 즉시 종료할 때",
    "option4": "코드를 생략할 때",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "조건문과 반복문",
    "chapterNum": 2
  },
  {
    "question": "while 루프에서 무한 루프를 만드는 구문은?",
    "option1": "while (True):",
    "option2": "while True:",
    "option3": "while 'yes':",
    "option4": "while 1==1:",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "조건문과 반복문",
    "chapterNum": 2
  },
  {
    "question": "Python에서 함수를 정의할 때 사용하는 키워드는?",
    "option1": "function",
    "option2": "def",
    "option3": "define",
    "option4": "lambda",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "함수와 모듈",
    "chapterNum": 3
  },
  {
    "question": "기본 매개변수를 사용하는 함수 정의는?",
    "option1": "def func(x: 1):",
    "option2": "def func[x=1]:",
    "option3": "def func(x=1):",
    "option4": "func = def(x=1)",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "함수와 모듈",
    "chapterNum": 3
  },
  {
    "question": "값을 반환하는 함수는 어떤 키워드를 사용하는가?",
    "option1": "return",
    "option2": "yield",
    "option3": "output",
    "option4": "send",
    "answerIndex": 1,
    "difficulty": "하",
    "chapterName": "함수와 모듈",
    "chapterNum": 3
  },
  {
    "question": "모듈을 불러올 때 사용하는 키워드는?",
    "option1": "include",
    "option2": "require",
    "option3": "import",
    "option4": "load",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "함수와 모듈",
    "chapterNum": 3
  },
  {
    "question": "math 모듈의 sqrt 함수는 무엇을 반환하는가?",
    "option1": "제곱",
    "option2": "제곱근",
    "option3": "2배",
    "option4": "로그값",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "함수와 모듈",
    "chapterNum": 3
  },
  {
    "question": "모듈의 일부 함수만 가져오고 싶을 때 사용하는 문법은?",
    "option1": "include function from module",
    "option2": "from module import function",
    "option3": "require module.function",
    "option4": "get module::function",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "함수와 모듈",
    "chapterNum": 3
  },
  {
    "question": "lambda 함수의 특징은?",
    "option1": "여러 줄 가능",
    "option2": "반복문 포함 가능",
    "option3": "익명 함수",
    "option4": "모듈 전용",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "함수와 모듈",
    "chapterNum": 3
  },
  {
    "question": "함수 내에서 전역 변수 사용 시 필요한 키워드는?",
    "option1": "this",
    "option2": "var",
    "option3": "global",
    "option4": "globalize",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "함수와 모듈",
    "chapterNum": 3
  },
  {
    "question": "파이썬 표준 내장 함수가 아닌 것은?",
    "option1": "len()",
    "option2": "sum()",
    "option3": "map()",
    "option4": "sqrt()",
    "answerIndex": 4,
    "difficulty": "상",
    "chapterName": "함수와 모듈",
    "chapterNum": 3
  },
  {
    "question": "패키지를 가져올 때 사용하는 폴더 기준 파일은?",
    "option1": "__main__.py",
    "option2": "package.py",
    "option3": "__init__.py",
    "option4": "module.py",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "함수와 모듈",
    "chapterNum": 3
  },
  {
    "question": "리스트의 기본 특징은?",
    "option1": "중복 불가",
    "option2": "정렬 자동",
    "option3": "순서 보장",
    "option4": "딕셔너리와 동일",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "자료구조 (리스트, 튜플, 딕셔너리, 세트)",
    "chapterNum": 4
  },
  {
    "question": "다음 중 튜플의 특징으로 옳은 것은?",
    "option1": "수정 가능",
    "option2": "중복 불가",
    "option3": "불변(immutable)",
    "option4": "key-value 저장",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "자료구조 (리스트, 튜플, 딕셔너리, 세트)",
    "chapterNum": 4
  },
  {
    "question": "세트(set)의 주요 특징은?",
    "option1": "중복 허용",
    "option2": "정렬 유지",
    "option3": "중복 제거",
    "option4": "순서 유지",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "자료구조 (리스트, 튜플, 딕셔너리, 세트)",
    "chapterNum": 4
  },
  {
    "question": "딕셔너리(dictionary)의 키로 사용할 수 없는 것은?",
    "option1": "int",
    "option2": "str",
    "option3": "list",
    "option4": "tuple",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "자료구조 (리스트, 튜플, 딕셔너리, 세트)",
    "chapterNum": 4
  },
  {
    "question": "리스트에서 요소 추가 시 사용하는 메서드는?",
    "option1": "add()",
    "option2": "insert()",
    "option3": "append()",
    "option4": "push()",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "자료구조 (리스트, 튜플, 딕셔너리, 세트)",
    "chapterNum": 4
  },
  {
    "question": "리스트에서 슬라이싱을 통해 2개 요소를 추출하는 문법은?",
    "option1": "list(1:3)",
    "option2": "list[1:3]",
    "option3": "list(1,3)",
    "option4": "list{1:3}",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "자료구조 (리스트, 튜플, 딕셔너리, 세트)",
    "chapterNum": 4
  },
  {
    "question": "다음 중 세트 연산에 해당하는 기호는?",
    "option1": "+",
    "option2": "&",
    "option3": "*",
    "option4": "-",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "자료구조 (리스트, 튜플, 딕셔너리, 세트)",
    "chapterNum": 4
  },
  {
    "question": "딕셔너리에서 키와 값을 모두 가져오는 메서드는?",
    "option1": "keys()",
    "option2": "values()",
    "option3": "items()",
    "option4": "get()",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "자료구조 (리스트, 튜플, 딕셔너리, 세트)",
    "chapterNum": 4
  },
  {
    "question": "튜플의 요소를 수정하려 하면?",
    "option1": "가능하다",
    "option2": "에러 발생",
    "option3": "삭제만 가능",
    "option4": "빈 튜플만 수정 가능",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "자료구조 (리스트, 튜플, 딕셔너리, 세트)",
    "chapterNum": 4
  },
  {
    "question": "딕셔너리에서 존재하지 않는 키 접근 시 사용하는 메서드는?",
    "option1": "access()",
    "option2": "get()",
    "option3": "search()",
    "option4": "query()",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "자료구조 (리스트, 튜플, 딕셔너리, 세트)",
    "chapterNum": 4
  },
  {
    "question": "파일을 읽기 모드로 열기 위한 코드는?",
    "option1": "open('file.txt', 'r')",
    "option2": "open('file.txt', 'w')",
    "option3": "read('file.txt')",
    "option4": "file('file.txt')",
    "answerIndex": 1,
    "difficulty": "하",
    "chapterName": "파일 입출력과 예외 처리",
    "chapterNum": 5
  },
  {
    "question": "텍스트 파일에 데이터를 쓰는 함수는?",
    "option1": "write()",
    "option2": "print()",
    "option3": "input()",
    "option4": "append()",
    "answerIndex": 1,
    "difficulty": "하",
    "chapterName": "파일 입출력과 예외 처리",
    "chapterNum": 5
  },
  {
    "question": "파일을 다 연 후 반드시 해야 할 작업은?",
    "option1": "save()",
    "option2": "exit()",
    "option3": "close()",
    "option4": "quit()",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "파일 입출력과 예외 처리",
    "chapterNum": 5
  },
  {
    "question": "예외 처리에서 사용하는 기본 구문은?",
    "option1": "try-catch",
    "option2": "try-except",
    "option3": "do-catch",
    "option4": "if-error",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "파일 입출력과 예외 처리",
    "chapterNum": 5
  },
  {
    "question": "다음 중 IOError를 발생시킬 수 있는 상황은?",
    "option1": "문법 오류",
    "option2": "파일 없음",
    "option3": "변수 없음",
    "option4": "리스트 인덱스 초과",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "파일 입출력과 예외 처리",
    "chapterNum": 5
  },
  {
    "question": "finally 블록의 역할은?",
    "option1": "예외가 발생했을 때만 실행",
    "option2": "예외가 없을 때만 실행",
    "option3": "항상 실행",
    "option4": "조건에 따라 실행",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "파일 입출력과 예외 처리",
    "chapterNum": 5
  },
  {
    "question": "파일을 한 줄씩 읽는 함수는?",
    "option1": "read()",
    "option2": "readline()",
    "option3": "readlines()",
    "option4": "nextline()",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "파일 입출력과 예외 처리",
    "chapterNum": 5
  },
  {
    "question": "파일을 한꺼번에 읽어 리스트로 반환하는 함수는?",
    "option1": "read()",
    "option2": "readline()",
    "option3": "readlines()",
    "option4": "lines()",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "파일 입출력과 예외 처리",
    "chapterNum": 5
  },
  {
    "question": "예외 객체를 변수로 받는 방법은?",
    "option1": "except e:",
    "option2": "except as e:",
    "option3": "except Exception:",
    "option4": "except Exception as e:",
    "answerIndex": 4,
    "difficulty": "상",
    "chapterName": "파일 입출력과 예외 처리",
    "chapterNum": 5
  },
  {
    "question": "파일을 안전하게 열고 자동으로 닫는 방법은?",
    "option1": "with open() as f:",
    "option2": "safe open()",
    "option3": "file auto()",
    "option4": "open+close()",
    "answerIndex": 1,
    "difficulty": "상",
    "chapterName": "파일 입출력과 예외 처리",
    "chapterNum": 5
  }
]