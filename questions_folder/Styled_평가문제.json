[
  {
    "question": "모든 요소에 스타일을 적용하려면 어떤 CSS 선택자를 사용해야 하는가?",
    "option1": "*",
    "option2": ".",
    "option3": "#",
    "option4": "%",
    "answerIndex": 1,
    "difficulty": "하",
    "chapterName": "선택자 & 우선순위",
    "chapterNum": 1
  },
  {
    "question": "클래스 선택자를 선언할 때 사용하는 접두사는?",
    "option1": ".",
    "option2": "#",
    "option3": "@",
    "option4": "&",
    "answerIndex": 1,
    "difficulty": "하",
    "chapterName": "선택자 & 우선순위",
    "chapterNum": 1
  },
  {
    "question": "p 요소의 직접 자식 span만 선택하려면 올바른 선택자는?",
    "option1": "p > span",
    "option2": "p span",
    "option3": "p + span",
    "option4": "p ~ span",
    "answerIndex": 1,
    "difficulty": "하",
    "chapterName": "선택자 & 우선순위",
    "chapterNum": 1
  },
  {
    "question": "id 선택자를 선언할 때 사용하는 접두사는?",
    "option1": ".",
    "option2": "#",
    "option3": "$",
    "option4": "!",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "선택자 & 우선순위",
    "chapterNum": 1
  },
  {
    "question": "다음 중 href 속성이 'https://'로 시작하는 a 요소를 선택하는 올바른 방법은?",
    "option1": "a[href^=\"https://\"]",
    "option2": "a[href$=\"https://\"]",
    "option3": "a[href*=\"https://\"]",
    "option4": "a[href]",
    "answerIndex": 1,
    "difficulty": "중",
    "chapterName": "선택자 & 우선순위",
    "chapterNum": 1
  },
  {
    "question": "속성 선택자 중 'title' 속성이 존재하는 모든 요소를 선택하는 선택자는?",
    "option1": "[title]",
    "option2": "[title*='']",
    "option3": "title",
    "option4": ":has(title)",
    "answerIndex": 1,
    "difficulty": "중",
    "chapterName": "선택자 & 우선순위",
    "chapterNum": 1
  },
  {
    "question": "클래스 'active'와 'highlight'를 모두 가진 요소를 선택하려면?",
    "option1": ".active.highlight",
    "option2": "#active.highlight",
    "option3": ".active .highlight",
    "option4": ".active, .highlight",
    "answerIndex": 1,
    "difficulty": "중",
    "chapterName": "선택자 & 우선순위",
    "chapterNum": 1
  },
  {
    "question": "CSS에서 우선순위가 가장 높은 선택자는?",
    "option1": "태그 선택자",
    "option2": "클래스 선택자",
    "option3": "id 선택자",
    "option4": "전체 선택자",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "선택자 & 우선순위",
    "chapterNum": 1
  },
  {
    "question": "다음 중 선택자 우선순위가 가장 높은 조합은?",
    "option1": ".box #id",
    "option2": "#id .box",
    "option3": "div.box",
    "option4": "* #id",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "선택자 & 우선순위",
    "chapterNum": 1
  },
  {
    "question": "우선순위를 임의로 높이고 싶을 때 사용하는 키워드는?",
    "option1": "important!",
    "option2": "!important",
    "option3": "#priority",
    "option4": ".force",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "선택자 & 우선순위",
    "chapterNum": 1
  },
  {
    "question": "박스 모델에서 콘텐츠(content) 영역의 바깥쪽에 위치하는 두 영역은?",
    "option1": "margin, padding",
    "option2": "border, margin",
    "option3": "padding, border",
    "option4": "margin, content",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "박스 모델 & 레이아웃",
    "chapterNum": 2
  },
  {
    "question": "박스 모델에서 요소의 가장 바깥쪽 여백을 나타내는 것은?",
    "option1": "padding",
    "option2": "border",
    "option3": "margin",
    "option4": "spacing",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "박스 모델 & 레이아웃",
    "chapterNum": 2
  },
  {
    "question": "콘텐츠 영역과 테두리(border) 사이의 공간은 무엇인가?",
    "option1": "margin",
    "option2": "padding",
    "option3": "spacing",
    "option4": "outline",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "박스 모델 & 레이아웃",
    "chapterNum": 2
  },
  {
    "question": "다음 중 블록 요소(block element)의 기본 특성이 아닌 것은?",
    "option1": "가로 전체를 차지한다",
    "option2": "줄바꿈이 자동으로 된다",
    "option3": "한 줄에 여러 개 나란히 배치된다",
    "option4": "높이와 너비를 지정할 수 있다",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "박스 모델 & 레이아웃",
    "chapterNum": 2
  },
  {
    "question": "`display: inline-block`의 특징은?",
    "option1": "블록 요소처럼 줄바꿈이 발생한다",
    "option2": "인라인 요소처럼 너비 지정이 불가능하다",
    "option3": "인라인처럼 나란히 배치되고, 블록처럼 사이즈 지정 가능하다",
    "option4": "요소가 사라진다",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "박스 모델 & 레이아웃",
    "chapterNum": 2
  },
  {
    "question": "`position: absolute`인 요소는 기본적으로 어디를 기준으로 배치되는가?",
    "option1": "자신의 부모 요소",
    "option2": "가장 가까운 static이 아닌 조상 요소",
    "option3": "브라우저 뷰포트",
    "option4": "자기 자신",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "박스 모델 & 레이아웃",
    "chapterNum": 2
  },
  {
    "question": "박스 모델에서 `box-sizing: border-box`는 어떤 동작을 하는가?",
    "option1": "margin을 포함해 총 너비를 계산",
    "option2": "content만 너비로 계산",
    "option3": "border와 padding을 포함해 총 너비를 계산",
    "option4": "아무 효과 없음",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "박스 모델 & 레이아웃",
    "chapterNum": 2
  },
  {
    "question": "요소가 float될 경우, 해당 요소 이후 콘텐츠의 레이아웃이 흐트러지는 것을 방지하려면 어떤 속성을 사용해야 하는가?",
    "option1": "overflow: hidden",
    "option2": "z-index",
    "option3": "clear",
    "option4": "display: block",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "박스 모델 & 레이아웃",
    "chapterNum": 2
  },
  {
    "question": "`position: fixed`와 `absolute`의 차이점은?",
    "option1": "fixed는 부모 기준이고 absolute는 브라우저 기준이다",
    "option2": "fixed는 뷰포트 기준이고 absolute는 조상 요소 기준이다",
    "option3": "둘 다 브라우저 기준이다",
    "option4": "absolute는 항상 화면 중앙에 표시된다",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "박스 모델 & 레이아웃",
    "chapterNum": 2
  },
  {
    "question": "z-index의 숫자가 클수록 어떻게 되는가?",
    "option1": "더 뒤로 이동한다",
    "option2": "더 앞으로 표시된다",
    "option3": "반응형이 된다",
    "option4": "고정 위치가 된다",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "박스 모델 & 레이아웃",
    "chapterNum": 2
  },
  {
    "question": "`display: flex`를 설정하면 기본적으로 어떤 방향으로 아이템이 정렬되는가?",
    "option1": "세로 방향(column)",
    "option2": "가로 방향(row)",
    "option3": "중앙 정렬",
    "option4": "우측 정렬",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "Flexbox & Grid",
    "chapterNum": 3
  },
  {
    "question": "Flexbox에서 주축(main axis)을 설정하는 속성은?",
    "option1": "flex-wrap",
    "option2": "align-items",
    "option3": "justify-content",
    "option4": "flex-direction",
    "answerIndex": 4,
    "difficulty": "하",
    "chapterName": "Flexbox & Grid",
    "chapterNum": 3
  },
  {
    "question": "`justify-content: space-between`은 어떤 정렬을 의미하는가?",
    "option1": "아이템들을 왼쪽에 정렬",
    "option2": "아이템 사이에 동일한 간격을 둠",
    "option3": "아이템을 오른쪽 정렬",
    "option4": "아이템의 가운데 정렬",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "Flexbox & Grid",
    "chapterNum": 3
  },
  {
    "question": "Flexbox에서 세로 정렬(교차축)을 설정하는 속성은?",
    "option1": "flex-grow",
    "option2": "align-items",
    "option3": "justify-content",
    "option4": "flex-direction",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "Flexbox & Grid",
    "chapterNum": 3
  },
  {
    "question": "`grid-template-columns: 1fr 2fr`은 어떤 의미인가?",
    "option1": "1열은 1px, 2열은 2px",
    "option2": "1열은 1단어, 2열은 2단어",
    "option3": "1열은 1비율, 2열은 2비율로 공간 분배",
    "option4": "1열은 고정, 2열은 유동적",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "Flexbox & Grid",
    "chapterNum": 3
  },
  {
    "question": "Flexbox에서 자식 요소가 부모의 공간을 초과할 경우 줄바꿈을 허용하려면?",
    "option1": "flex-wrap: wrap",
    "option2": "justify-content: stretch",
    "option3": "align-content: center",
    "option4": "overflow: scroll",
    "answerIndex": 1,
    "difficulty": "중",
    "chapterName": "Flexbox & Grid",
    "chapterNum": 3
  },
  {
    "question": "`grid-area` 속성은 어떤 역할을 하는가?",
    "option1": "아이템의 배경을 설정",
    "option2": "그리드 내 아이템의 이름을 지정하여 위치 지정",
    "option3": "아이템 간의 간격을 설정",
    "option4": "아이템의 크기를 고정",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "Flexbox & Grid",
    "chapterNum": 3
  },
  {
    "question": "`place-items: center`는 어떤 정렬 방식인가?",
    "option1": "가로만 가운데 정렬",
    "option2": "세로만 가운데 정렬",
    "option3": "가로와 세로 모두 가운데 정렬",
    "option4": "양 끝 정렬",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "Flexbox & Grid",
    "chapterNum": 3
  },
  {
    "question": "Flex 아이템 간 정렬 우선순위로 적용되는 순서는?",
    "option1": "align-items > align-self > justify-content",
    "option2": "justify-content > align-items > align-self",
    "option3": "align-self > align-items > justify-content",
    "option4": "justify-content > align-self > align-items",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "Flexbox & Grid",
    "chapterNum": 3
  },
  {
    "question": "`grid`를 사용하여 두 줄로 나누고, 각 줄에 3개의 동일한 열을 만들려면 올바른 설정은?",
    "option1": "grid-template-rows: repeat(2, 1fr); grid-template-columns: repeat(3, 1fr);",
    "option2": "grid-columns: 3; grid-rows: 2;",
    "option3": "grid-columns: auto; grid-template-rows: 2fr;",
    "option4": "display: flex; flex-direction: column;",
    "answerIndex": 1,
    "difficulty": "상",
    "chapterName": "Flexbox & Grid",
    "chapterNum": 3
  },
  {
    "question": "반응형 웹 디자인의 주요 목표는 무엇인가?",
    "option1": "웹사이트를 빠르게 로딩하기 위함",
    "option2": "모든 해상도와 장치에서 최적의 레이아웃을 제공하기 위함",
    "option3": "모든 브라우저에서 똑같이 보이기 위함",
    "option4": "폰트 크기를 크게 하기 위함",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "반응형 디자인 & 미디어 쿼리",
    "chapterNum": 4
  },
  {
    "question": "다음 중 뷰포트를 설정하는 메타 태그는?",
    "option1": "<meta responsive='true'>",
    "option2": "<meta name='viewport' content='width=device-width, initial-scale=1.0'>",
    "option3": "<meta screen='adaptive'>",
    "option4": "<meta name='media' content='responsive'>",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "반응형 디자인 & 미디어 쿼리",
    "chapterNum": 4
  },
  {
    "question": "미디어 쿼리에서 화면 너비가 768px 이상일 때를 지정하는 문법은?",
    "option1": "@media screen and (max-width: 768px)",
    "option2": "@media screen and (min-width: 768px)",
    "option3": "@media width >= 768px",
    "option4": "@media screen over 768px",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "반응형 디자인 & 미디어 쿼리",
    "chapterNum": 4
  },
  {
    "question": "rem 단위는 어떤 값을 기준으로 계산되는가?",
    "option1": "부모 요소의 크기",
    "option2": "가장 가까운 컨테이너의 크기",
    "option3": "루트 요소(html)의 폰트 크기",
    "option4": "디바이스 해상도",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "반응형 디자인 & 미디어 쿼리",
    "chapterNum": 4
  },
  {
    "question": "다음 중 모바일 우선 접근법(Mobile-first approach)의 핵심은?",
    "option1": "데스크탑 기준으로 시작한 후 모바일 대응",
    "option2": "모바일 스타일을 먼저 정의하고, 데스크탑에 맞춰 확장",
    "option3": "모바일 사이트와 데스크탑 사이트를 분리 개발",
    "option4": "모바일에서는 스타일을 최소화함",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "반응형 디자인 & 미디어 쿼리",
    "chapterNum": 4
  },
  {
    "question": "다음 중 반응형 이미지 구현 방식이 아닌 것은?",
    "option1": "srcset 속성을 사용하는 것",
    "option2": "CSS background-size: cover 사용",
    "option3": "picture 요소를 사용하는 것",
    "option4": "img 태그에 고정 px 값을 주는 것",
    "answerIndex": 4,
    "difficulty": "중",
    "chapterName": "반응형 디자인 & 미디어 쿼리",
    "chapterNum": 4
  },
  {
    "question": "다음 중 em 단위와 rem 단위의 주요 차이점은?",
    "option1": "em은 절대 단위, rem은 상대 단위",
    "option2": "em은 루트 기준, rem은 부모 기준",
    "option3": "em은 부모 기준, rem은 루트 기준",
    "option4": "차이가 없다",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "반응형 디자인 & 미디어 쿼리",
    "chapterNum": 4
  },
  {
    "question": "다음 중 여러 조건을 AND로 묶어 미디어 쿼리를 작성하는 방법은?",
    "option1": "@media screen { min-width: 600px; max-width: 900px; }",
    "option2": "@media screen and (min-width: 600px) and (max-width: 900px)",
    "option3": "@media (min-width: 600px) or (max-width: 900px)",
    "option4": "@media screen && (600px ~ 900px)",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "반응형 디자인 & 미디어 쿼리",
    "chapterNum": 4
  },
  {
    "question": "다음 중 반응형 디자인이 접근성을 높이는 이유로 적절한 것은?",
    "option1": "웹사이트의 디자인이 더 화려해진다",
    "option2": "코드가 짧아진다",
    "option3": "모든 사용자에게 일관된 경험을 제공할 수 있다",
    "option4": "이미지 품질이 좋아진다",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "반응형 디자인 & 미디어 쿼리",
    "chapterNum": 4
  },
  {
    "question": "미디어 쿼리를 사용하여 프린트 전용 스타일을 정의하려면?",
    "option1": "@media print",
    "option2": "@media only-screen",
    "option3": "@media screen-print",
    "option4": "@media screen and (print)",
    "answerIndex": 1,
    "difficulty": "상",
    "chapterName": "반응형 디자인 & 미디어 쿼리",
    "chapterNum": 4
  },
  {
    "question": "CSS 트랜지션을 적용하려면 어떤 속성을 사용해야 하는가?",
    "option1": "animation",
    "option2": "transition",
    "option3": "duration",
    "option4": "keyframes",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "애니메이션 & 트랜지션",
    "chapterNum": 5
  },
  {
    "question": "트랜지션 효과를 줄 때 지속 시간을 설정하는 속성은?",
    "option1": "transition-delay",
    "option2": "transition-timing",
    "option3": "transition-duration",
    "option4": "transition-speed",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "애니메이션 & 트랜지션",
    "chapterNum": 5
  },
  {
    "question": "다음 중 `transition-timing-function`의 기본값은?",
    "option1": "linear",
    "option2": "ease",
    "option3": "ease-in-out",
    "option4": "step-start",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "애니메이션 & 트랜지션",
    "chapterNum": 5
  },
  {
    "question": "애니메이션을 무한 반복하고 싶다면 어떤 속성을 사용해야 하는가?",
    "option1": "animation-repeat: infinite;",
    "option2": "animation-loop: true;",
    "option3": "animation-iteration-count: infinite;",
    "option4": "animation-cycle: always;",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "애니메이션 & 트랜지션",
    "chapterNum": 5
  },
  {
    "question": "`@keyframes`을 사용하는 이유는?",
    "option1": "애니메이션을 설정된 시간만큼 지연하기 위해",
    "option2": "속도 조절을 위해",
    "option3": "애니메이션의 중간 단계를 정의하기 위해",
    "option4": "요소에 그림자를 주기 위해",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "애니메이션 & 트랜지션",
    "chapterNum": 5
  },
  {
    "question": "`animation-fill-mode: forwards`는 어떤 효과를 주는가?",
    "option1": "애니메이션이 끝난 후 처음 상태로 돌아감",
    "option2": "애니메이션이 끝난 후 마지막 상태를 유지함",
    "option3": "애니메이션이 무한 반복됨",
    "option4": "애니메이션이 반대로 실행됨",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "애니메이션 & 트랜지션",
    "chapterNum": 5
  },
  {
    "question": "다음 중 `transform` 속성으로 할 수 있는 작업이 아닌 것은?",
    "option1": "회전",
    "option2": "크기 조절",
    "option3": "색상 변경",
    "option4": "이동",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "애니메이션 & 트랜지션",
    "chapterNum": 5
  },
  {
    "question": "복잡한 커스텀 속도 곡선을 지정하고 싶을 때 사용하는 값은?",
    "option1": "linear",
    "option2": "ease-in",
    "option3": "cubic-bezier",
    "option4": "bounce",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "애니메이션 & 트랜지션",
    "chapterNum": 5
  },
  {
    "question": "`animation-direction: alternate`는 어떤 동작을 하나?",
    "option1": "한 번만 실행",
    "option2": "앞으로만 실행",
    "option3": "앞뒤로 번갈아 실행",
    "option4": "랜덤하게 실행",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "애니메이션 & 트랜지션",
    "chapterNum": 5
  },
  {
    "question": "다음 중 트랜지션이 작동하지 않는 속성은?",
    "option1": "width",
    "option2": "height",
    "option3": "display",
    "option4": "opacity",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "애니메이션 & 트랜지션",
    "chapterNum": 5
  }
]