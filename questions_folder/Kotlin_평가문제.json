[
  {
    "question": "Kotlin에서 변수를 선언하는 키워드로 올바른 것은?",
    "option1": "var",
    "option2": "val",
    "option3": "let",
    "option4": "변수",
    "answerIndex": 1,
    "difficulty": "하",
    "chapterName": "기초 문법과 변수",
    "chapterNum": 1
  },
  {
    "question": "값을 변경할 수 없는 변수 선언 키워드는?",
    "option1": "val",
    "option2": "var",
    "option3": "let",
    "option4": "const",
    "answerIndex": 1,
    "difficulty": "하",
    "chapterName": "기초 문법과 변수",
    "chapterNum": 1
  },
  {
    "question": "Kotlin에서 문자열을 나타내는 타입은?",
    "option1": "Char",
    "option2": "String",
    "option3": "Text",
    "option4": "str",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "기초 문법과 변수",
    "chapterNum": 1
  },
  {
    "question": "Kotlin에서 자료형을 명시적으로 지정하려면?",
    "option1": "x: Int = 10",
    "option2": "Int x = 10",
    "option3": "x := 10",
    "option4": "x = Int(10)",
    "answerIndex": 1,
    "difficulty": "중",
    "chapterName": "기초 문법과 변수",
    "chapterNum": 1
  },
  {
    "question": "Kotlin에서 여러 줄 문자열을 표현할 때 사용하는 기호는?",
    "option1": "\"\"\"",
    "option2": "'''",
    "option3": "###",
    "option4": "\"",
    "answerIndex": 1,
    "difficulty": "중",
    "chapterName": "기초 문법과 변수",
    "chapterNum": 1
  },
  {
    "question": "val로 선언된 변수의 특징은?",
    "option1": "재할당 가능",
    "option2": "값 변경 불가",
    "option3": "타입 미지정 불가",
    "option4": "모든 경우에 final",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "기초 문법과 변수",
    "chapterNum": 1
  },
  {
    "question": "다음 중 올바른 변수 선언은?",
    "option1": "var 1name = \"John\"",
    "option2": "val age = 25",
    "option3": "val true = 1",
    "option4": "var %value = 10",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "기초 문법과 변수",
    "chapterNum": 1
  },
  {
    "question": "Kotlin에서 자료형을 자동으로 추론하는 기능은?",
    "option1": "inference",
    "option2": "autoType",
    "option3": "smart cast",
    "option4": "type inference",
    "answerIndex": 4,
    "difficulty": "상",
    "chapterName": "기초 문법과 변수",
    "chapterNum": 1
  },
  {
    "question": "Kotlin에서 백틱(`)을 사용하는 경우는?",
    "option1": "문자열 템플릿",
    "option2": "람다식",
    "option3": "함수명에 예약어 사용",
    "option4": "주석 처리",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "기초 문법과 변수",
    "chapterNum": 1
  },
  {
    "question": "Kotlin에서 문자열 템플릿을 사용하는 구문은?",
    "option1": "\\${변수}",
    "option2": "${변수}",
    "option3": "%{변수}",
    "option4": "&{변수}",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "기초 문법과 변수",
    "chapterNum": 1
  },
  {
    "question": "Kotlin에서 조건문 if는 어떤 값을 반환할 수 있는가?",
    "option1": "문자만",
    "option2": "값을 반환하지 않음",
    "option3": "표현식으로 사용 가능",
    "option4": "함수로만 사용 가능",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "조건문과 반복문",
    "chapterNum": 2
  },
  {
    "question": "Kotlin의 when 문은 어떤 역할을 하는가?",
    "option1": "루프",
    "option2": "switch 문과 유사",
    "option3": "함수 호출",
    "option4": "클래스 정의",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "조건문과 반복문",
    "chapterNum": 2
  },
  {
    "question": "while 루프의 조건이 false이면?",
    "option1": "무한 반복",
    "option2": "에러 발생",
    "option3": "실행되지 않음",
    "option4": "무조건 한 번 실행",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "조건문과 반복문",
    "chapterNum": 2
  },
  {
    "question": "Kotlin에서 do...while 루프는 어떤 특징이 있는가?",
    "option1": "조건이 먼저 평가됨",
    "option2": "조건이 false여도 한 번은 실행",
    "option3": "조건 없이 반복",
    "option4": "무한 루프 전용",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "조건문과 반복문",
    "chapterNum": 2
  },
  {
    "question": "반복문에서 continue 키워드의 역할은?",
    "option1": "루프 종료",
    "option2": "현재 반복을 건너뜀",
    "option3": "반복 시작",
    "option4": "조건 무시",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "조건문과 반복문",
    "chapterNum": 2
  },
  {
    "question": "for 루프에서 in 키워드는 무엇을 의미하는가?",
    "option1": "범위 반복",
    "option2": "조건식",
    "option3": "함수 호출",
    "option4": "null 체크",
    "answerIndex": 1,
    "difficulty": "중",
    "chapterName": "조건문과 반복문",
    "chapterNum": 2
  },
  {
    "question": "when 문에서 else는 어떤 의미인가?",
    "option1": "예외 발생",
    "option2": "기본 케이스",
    "option3": "루프 종료",
    "option4": "조건 생략",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "조건문과 반복문",
    "chapterNum": 2
  },
  {
    "question": "Kotlin의 반복문에서 인덱스를 함께 얻는 함수는?",
    "option1": "withIndex()",
    "option2": "withCount()",
    "option3": "indexed()",
    "option4": "zip()",
    "answerIndex": 1,
    "difficulty": "상",
    "chapterName": "조건문과 반복문",
    "chapterNum": 2
  },
  {
    "question": "Kotlin에서 step을 사용하는 경우는?",
    "option1": "무한 루프",
    "option2": "스텝 수 지정",
    "option3": "조건 생략",
    "option4": "중첩 반복문",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "조건문과 반복문",
    "chapterNum": 2
  },
  {
    "question": "반복문의 범위 지정 시 .. 연산자의 의미는?",
    "option1": "제외 범위",
    "option2": "오름차순 반복",
    "option3": "포함 범위",
    "option4": "무한 반복",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "조건문과 반복문",
    "chapterNum": 2
  },
  {
    "question": "Kotlin에서 함수를 정의할 때 사용하는 키워드는?",
    "option1": "define",
    "option2": "fun",
    "option3": "method",
    "option4": "function",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "함수와 람다",
    "chapterNum": 3
  },
  {
    "question": "Kotlin의 람다 표현식은 어떤 기호로 시작하는가?",
    "option1": "->",
    "option2": "{ }",
    "option3": "lambda",
    "option4": "=>",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "함수와 람다",
    "chapterNum": 3
  },
  {
    "question": "기본값이 있는 함수 매개변수를 선언할 때 사용하는 문법은?",
    "option1": "param: Int = 0",
    "option2": "Int param = 0",
    "option3": "param = Int(0)",
    "option4": "param = 0 : Int",
    "answerIndex": 1,
    "difficulty": "하",
    "chapterName": "함수와 람다",
    "chapterNum": 3
  },
  {
    "question": "Unit은 어떤 함수의 반환 타입인가?",
    "option1": "정수 반환",
    "option2": "문자열 반환",
    "option3": "반환값 없음",
    "option4": "예외 반환",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "함수와 람다",
    "chapterNum": 3
  },
  {
    "question": "람다식에서 it 키워드는 어떤 의미인가?",
    "option1": "반복자",
    "option2": "첫 번째 매개변수",
    "option3": "문자열",
    "option4": "클래스명",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "함수와 람다",
    "chapterNum": 3
  },
  {
    "question": "고차 함수란?",
    "option1": "클래스를 반환하는 함수",
    "option2": "람다만 사용 가능한 함수",
    "option3": "다형성 함수",
    "option4": "함수를 인자로 받거나 반환하는 함수",
    "answerIndex": 4,
    "difficulty": "중",
    "chapterName": "함수와 람다",
    "chapterNum": 3
  },
  {
    "question": "람다를 명시적으로 변수에 저장할 때 타입은?",
    "option1": "Lambda",
    "option2": "() -> Unit",
    "option3": "void",
    "option4": "Func",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "함수와 람다",
    "chapterNum": 3
  },
  {
    "question": "기본 매개변수와 이름 있는 인자를 함께 사용할 수 있는가?",
    "option1": "가능하다",
    "option2": "불가능하다",
    "option3": "경고 발생",
    "option4": "에러 발생",
    "answerIndex": 1,
    "difficulty": "상",
    "chapterName": "함수와 람다",
    "chapterNum": 3
  },
  {
    "question": "람다식에서 명시적으로 반환값을 지정하려면?",
    "option1": "return 사용",
    "option2": "it 키워드 사용",
    "option3": "last 표현식 사용",
    "option4": "result 사용",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "함수와 람다",
    "chapterNum": 3
  },
  {
    "question": "람다에서 여러 줄을 사용할 때 마지막 줄의 의미는?",
    "option1": "무시됨",
    "option2": "예외 발생",
    "option3": "반환값으로 사용",
    "option4": "출력만 됨",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "함수와 람다",
    "chapterNum": 3
  },
  {
    "question": "Kotlin에서 클래스를 정의할 때 사용하는 키워드는?",
    "option1": "object",
    "option2": "define",
    "option3": "class",
    "option4": "type",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "클래스와 객체",
    "chapterNum": 4
  },
  {
    "question": "객체 생성 시 사용하는 키워드는?",
    "option1": "instantiate",
    "option2": "object",
    "option3": "new",
    "option4": "없음",
    "answerIndex": 4,
    "difficulty": "하",
    "chapterName": "클래스와 객체",
    "chapterNum": 4
  },
  {
    "question": "클래스에 기본 생성자를 선언하려면?",
    "option1": "constructor()",
    "option2": "fun()",
    "option3": "init()",
    "option4": "class {}",
    "answerIndex": 1,
    "difficulty": "하",
    "chapterName": "클래스와 객체",
    "chapterNum": 4
  },
  {
    "question": "init 블록은 언제 실행되는가?",
    "option1": "프로그램 시작 시",
    "option2": "클래스 로드 시",
    "option3": "객체 생성 시",
    "option4": "컴파일 시",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "클래스와 객체",
    "chapterNum": 4
  },
  {
    "question": "프로퍼티의 getter/setter를 자동 생성하려면?",
    "option1": "변수를 private으로",
    "option2": "val/var 선언",
    "option3": "함수 정의",
    "option4": "데이터 클래스 사용",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "클래스와 객체",
    "chapterNum": 4
  },
  {
    "question": "data class의 주요 목적은?",
    "option1": "함수 집합",
    "option2": "UI 구성",
    "option3": "데이터 보관",
    "option4": "예외 처리",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "클래스와 객체",
    "chapterNum": 4
  },
  {
    "question": "상속을 허용하려면 클래스 앞에 붙여야 하는 키워드는?",
    "option1": "open",
    "option2": "public",
    "option3": "override",
    "option4": "super",
    "answerIndex": 1,
    "difficulty": "상",
    "chapterName": "클래스와 객체",
    "chapterNum": 4
  },
  {
    "question": "인터페이스 구현 시 사용하는 키워드는?",
    "option1": "include",
    "option2": "inherit",
    "option3": "implement",
    "option4": "override",
    "answerIndex": 4,
    "difficulty": "상",
    "chapterName": "클래스와 객체",
    "chapterNum": 4
  },
  {
    "question": "싱글톤 객체 생성을 위한 키워드는?",
    "option1": "new",
    "option2": "object",
    "option3": "this",
    "option4": "static",
    "answerIndex": 2,
    "difficulty": "상",
    "chapterName": "클래스와 객체",
    "chapterNum": 4
  },
  {
    "question": "this 키워드는 무엇을 가리키는가?",
    "option1": "상속 클래스",
    "option2": "부모 클래스",
    "option3": "현재 인스턴스",
    "option4": "외부 클래스",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "클래스와 객체",
    "chapterNum": 4
  },
  {
    "question": "널 값을 허용하는 타입은 어떻게 표현하는가?",
    "option1": "Int?",
    "option2": "Int!",
    "option3": "Int*",
    "option4": "nullable Int",
    "answerIndex": 1,
    "difficulty": "하",
    "chapterName": "컬렉션과 널 안정성",
    "chapterNum": 5
  },
  {
    "question": "리스트를 생성하는 기본 함수는?",
    "option1": "list()",
    "option2": "arrayList()",
    "option3": "listOf()",
    "option4": "new List()",
    "answerIndex": 3,
    "difficulty": "하",
    "chapterName": "컬렉션과 널 안정성",
    "chapterNum": 5
  },
  {
    "question": "널 안정성을 위한 연산자는?",
    "option1": "!!",
    "option2": "?.",
    "option3": "::",
    "option4": "?=",
    "answerIndex": 2,
    "difficulty": "하",
    "chapterName": "컬렉션과 널 안정성",
    "chapterNum": 5
  },
  {
    "question": "!! 연산자의 의미는?",
    "option1": "null 허용",
    "option2": "null 안전 호출",
    "option3": "null 아님 단언",
    "option4": "null 값 대입",
    "answerIndex": 3,
    "difficulty": "중",
    "chapterName": "컬렉션과 널 안정성",
    "chapterNum": 5
  },
  {
    "question": "Kotlin에서 컬렉션을 변경 불가능하게 생성하려면?",
    "option1": "mutableListOf()",
    "option2": "listOf()",
    "option3": "setOf()",
    "option4": "mapOf()",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "컬렉션과 널 안정성",
    "chapterNum": 5
  },
  {
    "question": "Map의 값을 가져오는 연산은?",
    "option1": "map.get(key)",
    "option2": "map[key]",
    "option3": "map.value(key)",
    "option4": "map->key",
    "answerIndex": 2,
    "difficulty": "중",
    "chapterName": "컬렉션과 널 안정성",
    "chapterNum": 5
  },
  {
    "question": "널 안정성 체크 후 기본값을 설정하려면 사용하는 연산자는?",
    "option1": "?:",
    "option2": "::",
    "option3": "!!",
    "option4": "&=",
    "answerIndex": 1,
    "difficulty": "상",
    "chapterName": "컬렉션과 널 안정성",
    "chapterNum": 5
  },
  {
    "question": "filter 함수는 어떤 컬렉션 연산인가?",
    "option1": "정렬",
    "option2": "요소 제거",
    "option3": "조건에 맞는 요소 추출",
    "option4": "전체 복사",
    "answerIndex": 3,
    "difficulty": "상",
    "chapterName": "컬렉션과 널 안정성",
    "chapterNum": 5
  },
  {
    "question": "Kotlin에서 안전 호출 연산자를 사용할 수 없는 곳은?",
    "option1": "변수",
    "option2": "함수 호출",
    "option3": "프로퍼티 접근",
    "option4": "클래스 정의",
    "answerIndex": 4,
    "difficulty": "상",
    "chapterName": "컬렉션과 널 안정성",
    "chapterNum": 5
  },
  {
    "question": "컬렉션 요소를 모두 순회하는 함수는?",
    "option1": "forEach",
    "option2": "loop",
    "option3": "iterate",
    "option4": "each()",
    "answerIndex": 1,
    "difficulty": "상",
    "chapterName": "컬렉션과 널 안정성",
    "chapterNum": 5
  }
]